name: release

on:
  push:
    tags:
      - v*
  workflow_dispatch:

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: 3.12
    - uses: Gr1N/setup-poetry@v8
    - name: Install dependencies
      run: make install
    - name: Run tests
      run: make test

  release:
    needs: build
    name: Release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Install Poetry
      uses: Gr1N/setup-poetry@v8
    - name: Build package
      run: make build
    - name: Retrieve tag
      id: tag
      run: echo "version=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_OUTPUT
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      with:
        name: Release ${{ steps.tag.outputs.version }}
        generate_release_notes:
        files: |
          "./dist/wolproxypyapi-${{ steps.tag.outputs.version }}.tar.gz"

  docker:
    name: Push Docker image
    needs: release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Build package
      run: make build
    - name: Retrieve tag
      id: tag
      run: echo "version=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_OUTPUT
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push image
      id: docker_build
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: bateman/wolproxypyapi:latest bateman/wolproxypyapi:${{ steps.tag.outputs.version }}
